#!/usr/bin/env php
<?php
/**
 * @copyright Copyright (c) 2015,2023 Nobuo Kihara
 * @license https://github.com/softark/creole/blob/master/LICENSE
 * @link https://github.com/softark/creole#readme
 */

$composerAutoload = [
    __DIR__ . '/../vendor/autoload.php', // standalone with "composer install" run
    __DIR__ . '/../../../autoload.php', // script is installed as a composer binary
];
foreach ($composerAutoload as $autoload) {
    if (file_exists($autoload)) {
        require($autoload);
        break;
    }
}

// Send all errors to stderr
ini_set('display_errors', 'stderr');

$full = false;
$src = [];
foreach ($argv as $k => $arg) {
    if ($k == 0) {
        continue;
    }
    if ($arg[0] == '-') {
        $arg = explode('=', $arg);
        switch ($arg[0]) {
            case '--full':
                $full = true;
                break;
            case '-h':
            case '--help':
                echo "PHP Creole to HTML converter\n";
                echo "----------------------------\n\n";
                echo "by Nobuo Kihara <softark@gmail.com>\n\n";
                usage();
                break;
            default:
                error("Unknown argument " . $arg[0], "usage");
        }
    } else {
        $src[] = $arg;
    }
}

if (empty($src)) {
    $markdown = file_get_contents("php://stdin");
} elseif (count($src) == 1) {
    $file = reset($src);
    if (!file_exists($file)) {
        error("File does not exist:" . $file);
    }
    $markdown = file_get_contents($file);
} else {
    error("Converting multiple files is not yet supported.", "usage");
}

/** @var softark\creole\Parser $md */
$md = new softark\creole\Creole();
$markup = $md->parse($markdown);

if ($full) {
    echo <<<HTML
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
	"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8">
	<style>
		body { font-family: Arial, sans-serif; }
		code { background: #eeeeff; padding: 2px; }
		li { margin-bottom: 5px; }
		img { max-width: 1200px; }
		table, td, th { border: solid 1px #ccc; border-collapse: collapse; }
		.left { text-align: left }
		.right { text-align: right }
		.center { text-align: center }
	</style>
</head>
<body>
$markup
</body>
</html>
HTML;
} else {
    echo $markup;
}

// functions

/**
 * Display usage information
 */
function usage()
{
    global $argv;
    $cmd = $argv[0];
    echo <<<EOF
Usage:
    $cmd [--full] [file.md]

    --full    ouput a full HTML page with head and body. If not given, only the parsed creole will be output.

    --help    shows this usage information.

    If no file is specified input will be read from STDIN.

Examples:

    Render a file with original creole:

        $cmd README.txt > README.html

    Convert the original creole description to html using STDIN:

        curl http://www.wikicreole.org/attach/Creole1.0TestCases/creole1.0test.txt | $cmd > creole.html

EOF;
    exit(1);
}

/**
 * Send custom error message to stderr
 * @param $message string
 * @param $callback mixed called before script exit
 * @return void
 */
function error($message, $callback = null)
{
    $fe = fopen("php://stderr", "w");
    fwrite($fe, "Error: " . $message . "\n");

    if (is_callable($callback)) {
        call_user_func($callback);
    }

    exit(1);
}
